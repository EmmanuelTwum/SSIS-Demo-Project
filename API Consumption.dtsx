<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="8/22/2023 12:44:11 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AMALITECH-PC-10"
  DTS:CreatorName="AzureAD\EmmanuelTwumOsafo"
  DTS:DTSID="{05335C7E-A948-4E32-9D68-E46D7C41EA2D}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5270.0"
  DTS:LocaleID="8192"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="7"
  DTS:VersionGUID="{8879AED9-1ADB-446A-8ABD-EBB16FD25140}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{ADD9C88C-3DE3-4F5B-A8AA-19D58A3F7E28}"
      DTS:ObjectName="FileName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\Users\EmmanuelTwumOsafo\Documents\MEGA\SQL\KDFW.json</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{6DB931F8-22F7-4C22-A97F-A192DE49D68F}"
      DTS:ObjectName="URL">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">https://api.weather.gov/stations/KDFW/observations/latest</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Load Weather data"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{6A88155C-44FC-4C0F-AFFE-5C6146077027}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load Weather data"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Load Weather data\Export Column"
              componentClassID="Microsoft.Extractor"
              contactInfo="Export Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Reads data from a data flow and insert it into a file. For example, create image files based on a database column that contains photographs."
              name="Export Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load Weather data\Export Column.Inputs[Export Column Input]"
                  hasSideEffects="true"
                  name="Export Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load Weather data\Export Column.Inputs[Export Column Input].Columns[FileName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="FileName"
                      errorOrTruncationOperation="File Open"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Load Weather data\Script Component.Outputs[APIResults].Columns[FileName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column that contains the file data."
                          name="FileDataColumnID">#{Package\Load Weather data\Export Column.Inputs[Export Column Input].Columns[FileData]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether to write a byte-order marker (BOM) to the file."
                          name="WriteBOM">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether to force truncation of an existing file."
                          name="ForceTruncate">true</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether to append data to an existing file."
                          name="AllowAppend">false</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load Weather data\Export Column.Inputs[Export Column Input].Columns[FileData]"
                      cachedDataType="image"
                      cachedName="FileData"
                      errorOrTruncationOperation="File Write"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Load Weather data\Script Component.Outputs[APIResults].Columns[FileData]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column that contains the file data."
                          name="FileDataColumnID">#{Package\Load Weather data\0:invalid}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether to write a byte-order marker (BOM) to the file."
                          name="WriteBOM">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether to force truncation of an existing file."
                          name="ForceTruncate">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether to append data to an existing file."
                          name="AllowAppend">true</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Weather data\Export Column.Outputs[Export Column Output]"
                  exclusionGroup="1"
                  name="Export Column Output"
                  synchronousInputId="Package\Load Weather data\Export Column.Inputs[Export Column Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load Weather data\Export Column.Outputs[Export Column Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Export Column Error Output"
                  synchronousInputId="Package\Load Weather data\Export Column.Inputs[Export Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Weather data\Export Column.Outputs[Export Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Weather data\Export Column.Outputs[Export Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Weather data\Export Column.Outputs[Export Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Weather data\Export Column.Outputs[Export Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Weather data\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public APIResultsBuffer APIResultsBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != APIResultsBuffer)
        {
            APIResultsBuffer.SetEndOfRowset();
            APIResultsBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"APIResults"))
            {
                APIResultsBuffer = new APIResultsBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String FileName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["FileName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String URL
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["URL"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ #region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */

        try
        {
            //Get the global variables
            string url = this.Variables.URL;
            string filename = this.Variables.FileName;
            string useragent = "SSIS for demo emmanueltwumosafo@gmail.com";


            System.Net.ServicePointManager.Expect100Continue = true;
            System.Net.ServicePointManager.SecurityProtocol = System.Net.SecurityProtocolType.Tls
                   | System.Net.SecurityProtocolType.Tls11
                   | System.Net.SecurityProtocolType.Tls12
                   | System.Net.SecurityProtocolType.Ssl3;

            //Set up connection
            System.Net.HttpWebRequest req = System.Net.HttpWebRequest.CreateHttp(url);
            //Setup the header directly
            //req.Headers.Add("User-Agent", useragent); //Most API uses this approach
            req.UserAgent = useragent; // setting up the user agent this way, works here


            //Get the response
            System.Net.HttpWebResponse resp = (System.Net.HttpWebResponse)req.GetResponse();
            System.IO.MemoryStream ms = new System.IO.MemoryStream();
            resp.GetResponseStream().CopyTo(ms);


            //Load data into buffer
            APIResultsBuffer.AddRow();
            APIResultsBuffer.FileData.AddBlobData(ms.ToArray());
            APIResultsBuffer.FileName = filename;
        }
        catch(Exception ex)
        {
            bool cancel = true; //specifies whether the execution of the component is cancelled
            this.ComponentMetaData.FireError(50000, "Parse Data", ex.Message, null, 0, out cancel);
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_f3de339bdbc54e8693ad6668f90fcc80.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A17328D4-4185-4E30-9E57-9435797BB8AB}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_f3de339bdbc54e8693ad6668f90fcc80</RootNamespace>
    <AssemblyName>SC_f3de339bdbc54e8693ad6668f90fcc80</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f3de339bdbc54e8693ad6668f90fcc80.Properties.Settings.get_Default():SC_f3de339bdbc54e8693ad6668f90fcc80.Properties.Sett" +
    "ings")]

namespace SC_f3de339bdbc54e8693ad6668f90fcc80.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class APIResultsBuffer: ScriptBuffer

{
    public APIResultsBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public BlobColumn FileData
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[0]];
        }
    }
    public bool FileData_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String FileName
    {
        set
        {
            this[1] = value;
        }
    }
    public bool FileName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_f3de339bdbc54e8693ad6668f90fcc80</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_f3de339bdbc54e8693ad6668f90fcc80</msb:DisplayName>
    <msb:ProjectId>{15356202-5369-422E-B64A-A949A642A523}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_f3de339bdbc54e8693ad6668f90fcc80.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_f3de339bdbc54e8693ad6668f90fcc80")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP Inc.")]
[assembly: AssemblyProduct("SC_f3de339bdbc54e8693ad6668f90fcc80")]
[assembly: AssemblyCopyright("Copyright @ HP Inc. 2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f3de339bdbc54e8693ad6668f90fcc80.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f3de339bdbc54e8693ad6668f90fcc80.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f3de339bdbc54e8693ad6668f90fcc80.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_f3de339bdbc54e8693ad6668f90fcc80.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_f3de339bdbc54e8693ad6668f90fcc80.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_f3de339bdbc54e8693ad6668f90fcc80.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
BQATAAAAEACOBuoGVQAGABYAAAEQAFQH6gZtAAgAGgAGAF0H5AAGACUH6AAGAJwF7AABANwH8AAB
ANwH8AARAJgE9AARAJIB+AARAOoA/ABQIAAAAADGAIkDBgABAFggAAAAAMYAlAMGAAEAYCAAAAAA
xgB/BwYAAQAoIQAAAACGGD0GBgABADAhAAAAAIYYPQZqAAEAOyEAAAAAhgjAAAABBABVIQAAAACG
CBsEjAAEAF4hAAAAAIYINwEQAAQAaCEAAAAAhggvBAUBBQB/IQAAAACGAJkIBgAGAIchAAAAAIYA
pQcGAAYAjyEAAAAAhgCoB4wABgCXIQAAAACGGD0GBgAGALchAAAAAMYBcQcGAAYAuSEAAAAAgQDW
AAYABgDYIQAAAADGAEkICgEGALchAAAAAMYBfwcGAAoALSIAAAAAhhg9BhYBCgA8IgAAAACGGD0G
FgELAEsiAAAAAIYIKgFbAAwAcSIAAAAAhgiMAFsADACXIgAAAACDGD0GBgAMAJ8iAAAAAJMIugUc
AQwAyyIAAAAAkwh6ASEBDADSIgAAAACTCIYBJgEMANoiAAAAAJYItAcsAQ0A4SIAAAAAhhg9BgYA
DQDpIgAAAACRGEMGMQENAAAAAQCzBQAAAgAvBwAAAwAxBQAAAQCgAwAAAQCgAwAAAQB3BwAAAgBK
BgAAAwBpBwAABAAxBQAAAQDyBwAAAQDyBwAAAQCgAwkAPQYBABEAPQYGABkAPQYKACkAPQYQADEA
PQYQADkAPQYQAEEAPQYQAEkAPQYQAFEAPQYQAFkAPQYQAGEAPQYQAGkAPQYGALEAPQYGANEAPQYV
AOEAPQYGAKEAiQMGAKEAlAMGAOkApgMlAOkASwQqAPkAggUwAAEBwAcQAPkAygE3AHEAPQYGAAkB
YAQ9ABkBEAVDAHEAoAhKAJkAtABPAKEAngBVAHkA+gBbACEBMwZfAIEAPQZqAIEAswV0AIEALwd4
AIkAfwR8AIEAPASBAIEAiASGAIEAQwQBACkBPQYQAIEAmQgGAIEApQcGAIEAqAeMAKEAPQYGAKEA
gACUAKEAQwebAKkAPQYGAKEAGQehADEBfwSnAKEAhAiuADkBVQi0AFkBGAG7AFkBqAjEALkAPQbK
ANkAPQYGAC4ACwBRAS4AEwBaAS4AGwB5AS4AIwCCAS4AKwCrAS4AMwCrAS4AOwCxAS4AQwCCAS4A
SwC+AS4AUwCrAS4AWwDcAUMAYwAmAuMAawAmAukAcwB5AQEBewAmAgkBcwB5ARsAkAADAAEABgAF
AAcABwAIAAkAAADEADUBAAAfBDoBAAA7AT4BAAAzBDoBAAA7AT4BAACQAD4BAAC+BUIBAACaAUcB
AAC4B0wBAgAGAAMAAgAHAAUAAQAIAAcAAQAJAAkAAgAUAAsAAgAVAA0AAgAXAA8AAgAYABEAAQAZ
ABEAAgAaABMABIAAAAEAAAAAAAAAAAAAAAAAUwAAAAQAAAAAAAAAAAAAANIAzQAAAAAAEAAAAAAA
AAAAAAAA2wD8BwAAAAAQAAAAAAAAAAAAAADbACgIAAAAAAQAAAAAAAAAAAAAANIAkQQAAAAAEAAA
AAAAAAAAAAAA2wBeBQAAAAAQAAAAAAAAAAAAAADbADsFAAAAAAAAAAABAAAAmAYAAAAAAElEVFND
b21wb25lbnRNZXRhRGF0YTEwMABJRFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEwMABJRFRT
RXZhbHVhdG9yQ29udGV4dDEwMABTQ19mM2RlMzM5YmRiYzU0ZTg2OTNhZDY2NjhmOTBmY2M4MAA8
TW9kdWxlPgBHZXRPdXRwdXRJRABnZXRfVVJMAFN5c3RlbS5JTwBnZXRfQ29tcG9uZW50TWV0YURh
dGEAQWRkQmxvYkRhdGEAZ2V0X0ZpbGVEYXRhAG1zY29ybGliAE1hcmtPdXRwdXRzRmluaXNoZWQA
ZGVmYXVsdEluc3RhbmNlAGdldF9NZXNzYWdlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9t
SGFuZGxlAGdldF9GaWxlTmFtZQBzZXRfRmlsZU5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMu
UGlwZWxpbmUAU2VjdXJpdHlQcm90b2NvbFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVz
b3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEh0dHBXZWJSZXNwb25zZQBHZXRS
ZXNwb25zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBE
ZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJv
d3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtB
dHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0
dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlv
bnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0
cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29t
cGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBv
c3RFeGVjdXRlAHZhbHVlAHNldF9FeHBlY3QxMDBDb250aW51ZQBTeXN0ZW0uUnVudGltZS5WZXJz
aW9uaW5nAFN0cmluZwBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfZjNkZTMzOWJkYmM1NGU4Njkz
YWQ2NjY4ZjkwZmNjODAuZGxsAGdldF9GaWxlRGF0YV9Jc051bGwAc2V0X0ZpbGVOYW1lX0lzTnVs
bABTZXROdWxsAHNldF9TZWN1cml0eVByb3RvY29sAEdldFJlc3BvbnNlU3RyZWFtAE1lbW9yeVN0
cmVhbQBnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBCbG9i
Q29sdW1uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5S
ZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AQ29weVRvAEN1bHR1cmVJbmZvAE91
dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAA
TWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAAQ3JlYXRlSHR0cABQaXBlbGluZUJ1
ZmZlcgBBUElSZXN1bHRzQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAFNl
cnZpY2VQb2ludE1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVy
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIARmlyZUVycm9yAC5jdG9y
AC5jY3RvcgBPdXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBp
bGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ19mM2RlMzM5YmRiYzU0ZTg2OTNhZDY2Njhm
OTBmY2M4MC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0Nf
ZjNkZTMzOWJkYmM1NGU4NjkzYWQ2NjY4ZjkwZmNjODAuUHJvcGVydGllcwBnZXRfUmVhZE9ubHlW
YXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAENv
bm5lY3Rpb25zAEJ1ZmZlcnMARmluaXNoT3V0cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dzAE9iamVj
dABTeXN0ZW0uTmV0AFNldEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AHNldF9Vc2VyQWdlbnQAVXNl
ckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuVHhTY3JpcHQASHR0cFdlYlJlcXVlc3QATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGlu
ZUhvc3QAUHJpbWVPdXRwdXQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRFdmFs
Q29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABBZGRSb3cAVG9BcnJheQBnZXRfQXNzZW1ibHkA
AAAAAFNTAFMASQBTACAAZgBvAHIAIABkAGUAbQBvACAAZQBtAG0AYQBuAHUAZQBsAHQAdwB1AG0A
bwBzAGEAZgBvAEAAZwBtAGEAaQBsAC4AYwBvAG0AABVQAGEAcgBzAGUAIABEAGEAdABhAACAm0kA
cwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAg
AHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAA
dABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAFUEAUABJAFIAZQBzAHUAbAB0
AHMAABFGAGkAbABlAE4AYQBtAGUAAAdVAFIATAAAcVMAQwBfAGYAMwBkAGUAMwAzADkAYgBkAGIA
YwA1ADQAZQA4ADYAOQAzAGEAZAA2ADYANgA4AGYAOQAwAGYAYwBjADgAMAAuAFAAcgBvAHAAZQBy
AHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAC87nH2UGJiSbrnjKR4Hw6CAAQgAQEIAyAA
AQUgAQEREQQgAQEOBSABARFlCQcFDg4SORI9AgQAAQECBQABARF5BgABEoCBDgUgABKAhQUgABKA
jQYgAQESgI0EIAAdBQUgAQEdBQUgABKAkQMgAA4KIAYBCA4ODggQAgkgAwESRR0IEkkDBhJFAwYd
CAQgARwIBCABAggFIAIBCBwDIAACAwcBCAYAAggSSQ4FIAEdCAgFIAASgJkGIAESgJ0cBQAAEoCh
BiABHBKApQgAARKArRGAsQUgABKAtQcgAgEOEoC1CLd6XFYZNOCJCImEXc2AgMyRAwYSFAMGEhgD
BhIMAwYSUQMGEl0DBhJhAwYSIAQgABJNBCABAQILIAQBCB0IHRJFEkkFIAEBElEEAAASXQQAABJh
BQABARJhBAAAEiADAAABBCgAEk0DKAACAygADgQIABJdBAgAEmEECAASIAgBAAgAAAAAAB4BAAEA
VAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfZjNkZTMzOWJkYmM1NGU4
NjkzYWQ2NjY4ZjkwZmNjODAAAAUBAAAAAAwBAAdIUCBJbmMuAAAdAQAYQ29weXJpZ2h0IEAgSFAg
SW5jLiAyMDIzAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rp
c3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwQBAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVt
LlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3Vs
dHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNv
dXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAACANwAAAAAAAAAA
AACaNwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjDcAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBt
c2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAACAQAAAAAAAAAAAAACAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBGgDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAEQDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAwAAgAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAEgAUAAgAEkAbgBjAC4AAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAA
dABpAG8AbgAAAAAAUwBDAF8AZgAzAGQAZQAzADMAOQBiAGQAYgBjADUANABlADgANgA5ADMAYQBk
ADYANgA2ADgAZgA5ADAAZgBjAGMAOAAwAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAA
AAAxAC4AMAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBm
ADMAZABlADMAMwA5AGIAZABiAGMANQA0AGUAOAA2ADkAMwBhAGQANgA2ADYAOABmADkAMABmAGMA
YwA4ADAALgBkAGwAbAAAAFYAGQABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgAEgAUAAgAEkAbgBjAC4AIAAyADAAMgAzAAAAAAAqAAEAAQBMAGUA
ZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABG
AGkAbABlAG4AYQBtAGUAAABTAEMAXwBmADMAZABlADMAMwA5AGIAZABiAGMANQA0AGUAOAA2ADkA
MwBhAGQANgA2ADYAOABmADkAMABmAGMAYwA4ADAALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBj
AHQATgBhAG0AZQAAAAAAUwBDAF8AZgAzAGQAZQAzADMAOQBiAGQAYgBjADUANABlADgANgA5ADMA
YQBkADYANgA2ADgAZgA5ADAAZgBjAGMAOAAwAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAKw3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_f3de339bdbc54e8693ad6668f90fcc80</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">$Package::FileName,$Package::URL</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">A7</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Load Weather data\Script Component.Outputs[APIResults]"
                  hasSideEffects="true"
                  name="APIResults">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Weather data\Script Component.Outputs[APIResults].Columns[FileData]"
                      dataType="image"
                      lineageId="Package\Load Weather data\Script Component.Outputs[APIResults].Columns[FileData]"
                      name="FileData" />
                    <outputColumn
                      refId="Package\Load Weather data\Script Component.Outputs[APIResults].Columns[FileName]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Load Weather data\Script Component.Outputs[APIResults].Columns[FileName]"
                      name="FileName" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Load Weather data.Paths[APIResults]"
              endId="Package\Load Weather data\Export Column.Inputs[Export Column Input]"
              name="APIResults"
              startId="Package\Load Weather data\Script Component.Outputs[APIResults]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="169.333333333334,42.6666666666667"
          Id="Package\Load Weather data"
          TopLeft="325.624995147809,220.349996059835" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Load Weather data">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="164,42.6666666666667"
          Id="Package\Load Weather data\Script Component"
          TopLeft="318.124995259568,246.349995594919" />
        <NodeLayout
          Size="149.333333333334,42.6666666666667"
          Id="Package\Load Weather data\Export Column"
          TopLeft="315.624995296821,391.299993003011" />
        <EdgeLayout
          Id="Package\Load Weather data.Paths[APIResults]"
          TopLeft="400.124995259568,289.016662261585">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-9.8333332960807,102.283330741426"
              Start="0,0"
              End="-9.8333332960807,94.7833307414255">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.1416653707128" />
                  <mssgle:CubicBezierSegment
                    Point1="0,47.1416653707128"
                    Point2="0,51.1416653707128"
                    Point3="-4,51.1416653707128" />
                  <mssgle:LineSegment
                    End="-5.8333332960807,51.1416653707128" />
                  <mssgle:CubicBezierSegment
                    Point1="-5.8333332960807,51.1416653707128"
                    Point2="-9.8333332960807,51.1416653707128"
                    Point3="-9.8333332960807,55.1416653707128" />
                  <mssgle:LineSegment
                    End="-9.8333332960807,94.7833307414255" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>